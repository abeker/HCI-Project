using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Xaml;

namespace Projekat_52CU
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window, INotifyPropertyChanged
    {
        
        /* >>> LOKAL <<<  */
        private void Dodaj_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            if (Projekat_52CU.Tip.DodajTip.ListaTipova.Count == 0 || Projekat_52CU.Etiketa.DodajEtiketu.ListaEtiketa.Count == 0)
            {
                e.CanExecute = false;
            }
            else
                e.CanExecute = true;            
        }

        private void Dodaj_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Meni_stavke.Dodaj();
            s.Show();
        }

        private void Izmeni_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            if(Projekat_52CU.Meni_stavke.Dodaj.Lokali.Count == 0)
            {
                e.CanExecute = false;
            }
            else
            {
                e.CanExecute = true;
            }
        }

        private void Izmeni_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Meni_stavke.Izmeni();
            s.Show();
        }

        /* >>> TIP <<<  */
        private void DTip_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;            
        }

        private void DTip_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Tip.DodajTip();
            s.Show();
        }

        private void ITip_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            if (Projekat_52CU.Tip.DodajTip.ListaTipova.Count == 0)
            {
                e.CanExecute = false;
            }
            else
            {
                e.CanExecute = true;
            }
        }

        private void ITip_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Tip.IzmeniTip();
            s.Show();
            //MessageBox.Show("Ova funkcija nije implementirana", "Izrada u toku");
        }


        /* >>> ETIKETA <<<  */
        private void DEtiketu_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;       
        }

        private void DEtiketu_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Etiketa.DodajEtiketu();
            s.Show();
        }

        private void IEtiketu_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            if (Projekat_52CU.Etiketa.DodajEtiketu.ListaEtiketa.Count == 0)
            {
                e.CanExecute = false;
            }
            else
            {
                e.CanExecute = true;
            }
        }

        private void IEtiketu_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Etiketa.IzmeniEtiketu();
            s.Show();
            //MessageBox.Show("Ova funkcija nije implementirana", "Izrada u toku");
        }

        private void PrikaziTabela_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            if(Projekat_52CU.Meni_stavke.Dodaj.Lokali.Count != 0)
                e.CanExecute = true;            
            else
                e.CanExecute = false;
        }

        private void PrikaziTabela_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            var s = new Projekat_52CU.Meni_stavke.PrikaziTabela();
            s.Show();
        }

        private void Dodaj_btn(object sender, RoutedEventArgs e)        // dugme na koje otvaram noi dijalog
        {
            var s = new Projekat_52CU.Dodavanje();
            s.Show();
        }

        private void Izmeni_btn(object sender, RoutedEventArgs e)        // dugme na koje otvaram noi dijalog
        {
            var s = new IzmenaPrava();
            s.Show();
        }

        private void SacuvajEtiketu_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            if (Etiketa.DodajEtiketu.ListaEtiketa.Count != 0)
                e.CanExecute = true;
            else
                e.CanExecute = false;
        }

        private void SacuvajEtiketu_Executed(object sender, ExecutedRoutedEventArgs e)
        {
            /*  fullPath = System.IO.Path.GetFullPath(fileNameKorisnik);
                System.IO.StreamWriter file = new System.IO.StreamWriter(fullPath);
                foreach (Korisnik e in listaKorisnika)
                {
                    string text = e.KorIme + "|" + e.Lozinka1;
                    file.WriteLine(text);
                }
                file.Close();   */

            string fullPath = System.IO.Path.GetFullPath(fileNameKorisnik);
            System.IO.StreamWriter file = new System.IO.StreamWriter(fullPath);
            foreach (Korisnik e in listaKorisnika)
            {
                string text = e.KorIme + "|" + e.Lozinka1;
                file.WriteLine(text);
            }
            file.Close();

        }

        private void UcitajEtiketu_CanExecute(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;
        }

        private void UcitajEtiketu_Executed(object sender, ExecutedRoutedEventArgs e)
        {

        }

        #region PropertyChangedNotifier
        protected virtual void OnPropertyChanged(string name)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(name));
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        #endregion
        
    }

}
